syntax = "proto3";

package haf80.api.payment;

option go_package = "micro/pb/proto/payment;payment";

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  base_path: "/payment";
  security_definitions: {
    security: {
      key: "bearer"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "Authorization"
        description: "Authentication token, prefixed by Bearer: Bearer <token>"
      }
    }
  }
  security: {
    security_requirement: {
      key: "bearer"
    }
  }
};


service Product{
  // initial an order
  rpc Order (haf80.api.payment.OrderRequest) returns (haf80.api.payment.OrderResponse) {
    option (google.api.http) = {
      post: "/v1/product/order"
      body: "*"
    };
  }
  // get order status by order_id
  rpc OrderStatus (haf80.api.payment.OrderStatusRequest) returns (haf80.api.payment.OrderStatusResponse) {
    option (google.api.http) = {
      get: "/v1/product/order/{orderId}"
    };
  }
  // get all gateways with service_id
  rpc Gateway (haf80.api.payment.GatewayRequest) returns (haf80.api.payment.GatewayResponse) {
    option (google.api.http) = {
      get: "/v1/product/gateway"
    };
  }

  // Get the all orders for user
  rpc Get (haf80.api.payment.GetOrderRequest) returns (haf80.api.payment.GetOrderResponse) {
    option (google.api.http) = {
      get: "/v1/product/order"
    };
  }

  // Get the all quick actions
  rpc GetPaymentErrors (google.protobuf.Empty) returns (haf80.api.payment.GetPaymentErrorsResponse) {
    option (google.api.http) = {
      get: "/v1/product/error"
    };
  }
}

message OrderRequest {
  string orderId = 1 [(google.api.field_behavior) = REQUIRED];
  uint32 gatewayId = 2 [(google.api.field_behavior) = REQUIRED];
}

message OrderResponse {
  string refId = 1 [(google.api.field_behavior) = REQUIRED];
  uint32 price = 2 [(google.api.field_behavior) = REQUIRED];
  string paymentGateway = 3 [(google.api.field_behavior) = REQUIRED];
  string orderId = 4 [(google.api.field_behavior) = REQUIRED];
}

message GatewayRequest{
  uint32 serviceId = 1 [(google.api.field_behavior) = REQUIRED];
}

message Gateway {
  uint32 id = 1 [(google.api.field_behavior) = REQUIRED];
  string name = 2 [(google.api.field_behavior) = REQUIRED];
  string paymentType = 3 [(google.api.field_behavior) = REQUIRED];
  string paymentMethod = 4 [(google.api.field_behavior) = REQUIRED];
  string label = 5 [(google.api.field_behavior) = REQUIRED];
}

message GatewayResponse{
  repeated Gateway data = 1 [(google.api.field_behavior) = REQUIRED];
}

message OrderStatusRequest{
  string orderId = 1 [(google.api.field_behavior) = REQUIRED];
}

message OrderStatusResponse{
  uint32 price = 1 [(google.api.field_behavior) = REQUIRED];
  string mask = 2 [(google.api.field_behavior) = REQUIRED];
  string serviceName = 3 [(google.api.field_behavior) = REQUIRED];
  string status = 4 [(google.api.field_behavior) = REQUIRED];
  int64 saleReferenceId = 5 [(google.api.field_behavior) = REQUIRED];
  string created_at = 6 [(google.api.field_behavior) = REQUIRED]; 
  string message = 7 [(google.api.field_behavior) = REQUIRED];
  map<string, string> data = 8 [(google.api.field_behavior) = REQUIRED];
}

message OrderMessage{
  uint32 price = 1 [(google.api.field_behavior) = REQUIRED];
  string mask = 2 [(google.api.field_behavior) = REQUIRED];
  string serviceName = 3 [(google.api.field_behavior) = REQUIRED];
  string status = 4 [(google.api.field_behavior) = REQUIRED];
  int64 saleReferenceId = 5 [(google.api.field_behavior) = REQUIRED];
  string orderId = 6 [(google.api.field_behavior) = REQUIRED];
  string created_at = 7 [(google.api.field_behavior) = REQUIRED]; 
  string message = 8 [(google.api.field_behavior) = REQUIRED];
  map<string, string> data = 9 [(google.api.field_behavior) = REQUIRED];
}

message GetOrderRequest {
  uint32 limit = 1 [(google.api.field_behavior) = REQUIRED];
  uint32 offset = 2 [(google.api.field_behavior) = REQUIRED];
}
message GetOrderResponse {
  uint32 total = 1 [(google.api.field_behavior) = REQUIRED];
  uint32 page  = 2 [(google.api.field_behavior) = REQUIRED];
  repeated OrderMessage data = 3 [(google.api.field_behavior) = REQUIRED];
}

message GetPaymentErrorsResponse {
  message error {
    int64 id = 1 [(google.api.field_behavior) = REQUIRED];
    string message = 2 [(google.api.field_behavior) = REQUIRED];
    string description = 3 [(google.api.field_behavior) = REQUIRED];
    string status = 4 [(google.api.field_behavior) = REQUIRED];
  }
  repeated error data = 1 [(google.api.field_behavior) = REQUIRED];
}

service Admin {
  // Get the all errors
  rpc GetErrors (google.protobuf.Empty) returns (haf80.api.payment.ErrorListResponse) {
    option (google.api.http) = {
      get: "/v1/admin/error/list"
    };
  }
  // update the error for specific user ID
  rpc UpdateError (haf80.api.payment.Error) returns (haf80.api.payment.ErrorUpdateResponse) {
    option (google.api.http) = {
      post: "/v1/admin/error/update"
      body: "*"
    };
  }
  // Create the error for specific user ID
  rpc CreateError (haf80.api.payment.CreateErrorRequest) returns (haf80.api.payment.ErrorCreateResponse) {
    option (google.api.http) = {
      post: "/v1/admin/error/create"
      body: "*"
    };
  }
}

message Error {
  int32  id = 1 [(google.api.field_behavior) = REQUIRED];
  string message = 2 [(google.api.field_behavior) = REQUIRED];
  string lang = 3 [(google.api.field_behavior) = REQUIRED];
  uint32 httpCode = 4 [(google.api.field_behavior) = REQUIRED];
  int32  code = 5 [(google.api.field_behavior) = REQUIRED];
  string status = 6 [(google.api.field_behavior) = REQUIRED];
  string type = 7 [(google.api.field_behavior) = REQUIRED];
  string description = 8 [(google.api.field_behavior) = REQUIRED];
}

message CreateErrorRequest {
  string message = 1 [(google.api.field_behavior) = REQUIRED];
  string lang = 2 [(google.api.field_behavior) = REQUIRED];
  uint32 httpCode = 3 [(google.api.field_behavior) = REQUIRED];
  int32  code = 4 [(google.api.field_behavior) = REQUIRED];
  uint32 serviceCode = 5 [(google.api.field_behavior) = REQUIRED];
  string type = 6 [(google.api.field_behavior) = REQUIRED];
  string status = 7 [(google.api.field_behavior) = REQUIRED];
  string description = 8 [(google.api.field_behavior) = REQUIRED];
}

message ErrorListResponse {
  uint32 code = 1 [(google.api.field_behavior) = REQUIRED];
  string message = 2 [(google.api.field_behavior) = REQUIRED];
  repeated Error data = 3 [(google.api.field_behavior) = REQUIRED];
}
message ErrorUpdateResponse {
  uint32 code = 1 [(google.api.field_behavior) = REQUIRED];
  string message = 2 [(google.api.field_behavior) = REQUIRED];
}
message ErrorCreateResponse{
  uint32 code = 1 [(google.api.field_behavior) = REQUIRED];
  string message = 2 [(google.api.field_behavior) = REQUIRED];
}