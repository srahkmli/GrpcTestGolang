syntax = "proto3";

package haf80.api.pin;

option go_package = "micro/pb/proto/pin;pin";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  base_path: "/pin";
};

service Admin {
  // Get the all errors
  rpc GetErrors (google.protobuf.Empty) returns (haf80.api.pin.ErrorListResponse) {
    option (google.api.http) = {
      get: "/v1/admin/error/list"
    };
  }
  // update the error for specific user ID
  rpc UpdateError (haf80.api.pin.Error) returns (haf80.api.pin.ErrorUpdateResponse) {
    option (google.api.http) = {
      post: "/v1/admin/error/update"
      body: "*"
    };
  }
  // Create the error for specific user ID
  rpc CreateError (haf80.api.pin.CreateErrorRequest) returns (haf80.api.pin.ErrorCreateResponse) {
    option (google.api.http) = {
      post: "/v1/admin/error/create"
      body: "*"
    };
  }

  rpc Get (haf80.api.pin.GetRequest) returns (haf80.api.pin.PinList) {
    option (google.api.http) = {
      get: "/v1/admin/pin"
    };
  }

  rpc Update (haf80.api.pin.Pin) returns (haf80.api.pin.Response) {
    option (google.api.http) = {
      patch : "/v1/admin/pin"
      body: "*"
    };
  }

  rpc Insert (haf80.api.pin.PinList) returns (haf80.api.pin.Response) {
    option (google.api.http) = {
      post : "/v1/admin/pin"
      body: "*"
    };
  }


}

message Error {
  int32  id = 1;
  string message = 2;
  string lang = 3;
  uint32 httpCode = 4;
  int32  code = 5;
  string status = 6;
  string type = 7;
  string description = 8;
}

message CreateErrorRequest {
  string message = 1;
  string lang = 2;
  uint32 httpCode = 3;
  int32  code = 4;
  uint32 serviceCode = 5;
  string type = 6;
  string status = 7;
  string description = 8;
}

message ErrorListResponse {
  uint32 code = 1;
  string message = 2;
  repeated Error data = 3;
}
message ErrorUpdateResponse {
  uint32 code = 1;
  string message = 2;
}
message ErrorCreateResponse{
  uint32 code = 1;
  string message = 2;
}


message Response {
  string message = 1;
}

message  Pin {
  string serial = 1;
  string chargePin = 2;
  uint32 amount = 3;
  enum serviceEnum {
    unknown = 0;
    irancell = 1;
    mci = 2;
    rightel = 3;
    shatel = 4;
  }
  serviceEnum service = 4;
  enum statusEnum {
    enable = 0;
    disable = 2;
  }
  statusEnum status = 5;
  string category = 6;
  bool isUsed = 7;
}

message GetRequest{
  uint32  limit = 1;
  uint32  offset = 2;
}

message PinList {
  repeated Pin data = 1;
}
